DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@1201a25
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@1201a25
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1201a25
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@85af80
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1457cb
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@a3bcc1
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@911f71
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@911f71
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@911f71
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@1f20eeb
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@1f20eeb
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f20eeb
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@1f7d134
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@1f7d134
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f7d134
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@e2eec8
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@e2eec8
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e2eec8
DEBUG - Adding type registration long -> org.hibernate.type.LongType@53c015
DEBUG - Adding type registration long -> org.hibernate.type.LongType@53c015
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@53c015
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@9f2a0b
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@9f2a0b
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9f2a0b
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@913750
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@913750
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@913750
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@bfbdb0
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@bfbdb0
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19fcc69
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19fcc69
DEBUG - Adding type registration string -> org.hibernate.type.StringType@209f4e
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@209f4e
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@12f6684
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12f6684
DEBUG - Adding type registration date -> org.hibernate.type.DateType@929206
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@929206
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@e39a3e
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e39a3e
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@1858610
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1858610
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1858610
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a125f0
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@131f71a
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@131f71a
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@131f71a
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@197d257
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@108786b
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@108786b
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@eee36c
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@eee36c
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@f5da06
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f5da06
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@11a698a
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@11a698a
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@14f8dab
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@14f8dab
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a18aa2
DEBUG - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17943a4
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@47858e
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@47858e
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@47858e
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a7bf11
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a7bf11
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a7bf11
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@fabe9
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@1ba34f2
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ba34f2
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@1ba34f2
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13f5d07
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13f5d07
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13f5d07
DEBUG - Adding type registration text -> org.hibernate.type.TextType@1a16869
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@1b90b39
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1b90b39
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b8df17
DEBUG - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1be2d65
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@12dacd1
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12dacd1
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10385c1
DEBUG - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@30c221
DEBUG - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@f72617
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@4f1d0d
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@12b6651
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@12b6651
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1888759
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e1408
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e53108
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f62373
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19189e1
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f33675
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7c6768
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1690726
INFO - Hibernate Commons Annotations 3.2.0.Final
INFO - Hibernate 3.6.7.Final
INFO - hibernate.properties not found
INFO - Bytecode provider name : javassist
INFO - using JDK 1.4 java.sql.Timestamp handling
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
INFO - configuring from resource: /hibernate.cfg.xml
INFO - Configuration resource: /hibernate.cfg.xml
DEBUG - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
DEBUG - attempting to resolve on classpath under org/hibernate/
DEBUG - located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
DEBUG - hibernate.connection.driver_class=com.mysql.jdbc.Driver
DEBUG - hibernate.connection.url=jdbc:mysql://localhost:3306/hibernate_schema
DEBUG - hibernate.connection.username=root
DEBUG - hibernate.connection.password=password
DEBUG - show_sql=true
DEBUG - dialect=org.hibernate.dialect.MySQLDialect
DEBUG - hibernate.hbm2ddl.auto=update
DEBUG - session-factory config [null] named class [com.prabhakar.hibernate.Customer] for mapping
INFO - Configured SessionFactory: null
DEBUG - properties: {hibernate.connection.password=password, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\java\jdk1.6.0_20\jre\bin, java.vm.version=16.3-b01, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Manoj\Workspace\Hibernate_WS\AHLab01, java.runtime.version=1.6.0_20-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\java\jdk1.6.0_20\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\manoj\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows NT (unknown), sun.jnu.encoding=Cp1252, java.library.path=C:\java\jdk1.6.0_20\jre\bin;.;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/java/jdk1.6.0_20/bin/../jre/bin/client;C:/java/jdk1.6.0_20/bin/../jre/bin;C:/java/jdk1.6.0_20/bin/../jre/lib/i386;C:\java\jdk1.6.0_20\bin;C:\java\jdk1.6.0_20\jre\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Common Files\lenovo\easyplussdk\bin;C:\Program Files (x86)\Skype\Phone\;C:\Users\manoj\AppData\Local\Microsoft\WindowsApps;;C:\Manoj\Software\Working Software\eclipse-jee-juno-SR1-win32\eclipse;, java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.2, user.home=C:\Users\manoj, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=manoj, java.class.path=C:\Manoj\Workspace\Hibernate_WS\AHLab01\bin;C:\Manoj\Software\Working Software\MySql5.0\mysql.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\antlr-2.7.6.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\commons-collections-3.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\dom4j-1.6.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\hibernate-commons-annotations-3.2.0.Final.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\hibernate-core-3.6.7.Final.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\javassist.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\jms-1.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\jsr250-api-1.0.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\jta-1.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\log4j-1.2.16.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\ojdbc14.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\slf4j-api-1.6.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\slf4j-log4j12-1.6.1.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, java.home=C:\java\jdk1.6.0_20\jre, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost:3306/hibernate_schema, user.language=en, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.6.0_20, java.ext.dirs=C:\java\jdk1.6.0_20\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\java\jdk1.6.0_20\jre\lib\resources.jar;C:\java\jdk1.6.0_20\jre\lib\rt.jar;C:\java\jdk1.6.0_20\jre\lib\sunrsasign.jar;C:\java\jdk1.6.0_20\jre\lib\jsse.jar;C:\java\jdk1.6.0_20\jre\lib\jce.jar;C:\java\jdk1.6.0_20\jre\lib\charsets.jar;C:\java\jdk1.6.0_20\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, hibernate.hbm2ddl.auto=update, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG - Preparing to build session factory with filters : {}
DEBUG - Processing hbm.xml files
DEBUG - Process annotated classes
INFO - Binding entity from annotated class: com.prabhakar.hibernate.Customer
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG - Import with entity name Customer
INFO - Bind entity com.prabhakar.hibernate.Customer on table customers
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=cid, insertable=true, updatable=true, unique=false}
DEBUG - binding property cid with lazy=false
DEBUG - building SimpleValue for cid
DEBUG - Building property cid
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=city, insertable=true, updatable=true, unique=false}
DEBUG - binding property city with lazy=false
DEBUG - building SimpleValue for city
DEBUG - Building property city
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=cname, insertable=true, updatable=true, unique=false}
DEBUG - binding property cname with lazy=false
DEBUG - building SimpleValue for cname
DEBUG - Building property cname
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=email, insertable=true, updatable=true, unique=false}
DEBUG - binding property email with lazy=false
DEBUG - building SimpleValue for email
DEBUG - Building property email
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - binding property phone with lazy=false
DEBUG - building SimpleValue for phone
DEBUG - Building property phone
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=status, insertable=true, updatable=true, unique=false}
DEBUG - binding property status with lazy=false
DEBUG - building SimpleValue for status
DEBUG - Building property status
DEBUG - Setting SimpleValue typeName for cid
DEBUG - Setting SimpleValue typeName for city
DEBUG - Setting SimpleValue typeName for cname
DEBUG - Setting SimpleValue typeName for email
DEBUG - Setting SimpleValue typeName for phone
DEBUG - Setting SimpleValue typeName for status
DEBUG - processing fk mappings (*ToOne and JoinedSubclass)
DEBUG - processing extends queue
DEBUG - processing extends queue
DEBUG - processing collection mappings
DEBUG - processing native query and ResultSetMapping mappings
DEBUG - processing association property references
DEBUG - processing foreign key constraints
INFO - Hibernate Validator not found: ignoring
DEBUG - Legacy Validator not present in classpath, ignoring event listener registration
DEBUG - Search not present in classpath, ignoring event listener registration.
INFO - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
INFO - Using Hibernate built-in connection pool (not for production use!)
INFO - Hibernate connection pool size: 20
INFO - autocommit mode: false
INFO - using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hibernate_schema
INFO - connection properties: {user=root, password=password}
DEBUG - opening new JDBC connection
DEBUG - created connection to: jdbc:mysql://localhost:3306/hibernate_schema, Isolation Level: 4
INFO - Using dialect: org.hibernate.dialect.MySQLDialect
INFO - Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
INFO - Database ->
       name : MySQL
    version : 5.0.17-nt
      major : 5
      minor : 0
INFO - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.12 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
INFO - Using default transaction strategy (direct JDBC transactions)
INFO - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
INFO - Automatic flush during beforeCompletion(): disabled
INFO - Automatic session close at end of transaction: disabled
INFO - JDBC batch size: 15
INFO - JDBC batch updates for versioned data: disabled
INFO - Scrollable result sets: enabled
DEBUG - Wrap result sets: disabled
INFO - JDBC3 getGeneratedKeys(): enabled
INFO - Connection release mode: auto
INFO - Maximum outer join fetch depth: 2
INFO - Default batch fetch size: 1
INFO - Generate SQL with comments: disabled
INFO - Order SQL updates by primary key: disabled
INFO - Order SQL inserts for batching: disabled
INFO - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
INFO - Using ASTQueryTranslatorFactory
INFO - Query language substitutions: {}
INFO - JPA-QL strict compliance: disabled
INFO - Second-level cache: enabled
INFO - Query cache: disabled
INFO - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
INFO - Optimize cache for minimal puts: disabled
INFO - Structured second-level cache entries: disabled
INFO - Echoing all SQL to stdout
INFO - Statistics: disabled
INFO - Deleted entity synthetic identifier rollback: disabled
INFO - Default entity-mode: pojo
INFO - Named query checking : enabled
INFO - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
INFO - building session factory
DEBUG - Statistics initialized [enabled=false]}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@1201a25
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@1201a25
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1201a25
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@85af80
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1457cb
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@a3bcc1
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@911f71
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@911f71
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@911f71
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@1f20eeb
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@1f20eeb
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f20eeb
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@1f7d134
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@1f7d134
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f7d134
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@e2eec8
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@e2eec8
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e2eec8
DEBUG - Adding type registration long -> org.hibernate.type.LongType@53c015
DEBUG - Adding type registration long -> org.hibernate.type.LongType@53c015
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@53c015
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@9f2a0b
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@9f2a0b
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9f2a0b
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@913750
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@913750
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@913750
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@bfbdb0
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@bfbdb0
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19fcc69
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19fcc69
DEBUG - Adding type registration string -> org.hibernate.type.StringType@209f4e
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@209f4e
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@12f6684
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12f6684
DEBUG - Adding type registration date -> org.hibernate.type.DateType@929206
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@929206
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@e39a3e
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e39a3e
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@1858610
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1858610
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1858610
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a125f0
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@131f71a
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@131f71a
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@131f71a
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@197d257
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@108786b
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@108786b
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@eee36c
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@eee36c
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@f5da06
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f5da06
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@11a698a
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@11a698a
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@14f8dab
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@14f8dab
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a18aa2
DEBUG - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17943a4
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@47858e
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@47858e
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@47858e
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a7bf11
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a7bf11
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a7bf11
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@fabe9
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@1ba34f2
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ba34f2
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@1ba34f2
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13f5d07
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13f5d07
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13f5d07
DEBUG - Adding type registration text -> org.hibernate.type.TextType@1a16869
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@1b90b39
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1b90b39
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b8df17
DEBUG - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1be2d65
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@12dacd1
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12dacd1
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10385c1
DEBUG - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@30c221
DEBUG - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@f72617
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@4f1d0d
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@12b6651
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@12b6651
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e64686
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@203c31
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fc156
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1e2ca7
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@105bd58
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d1e730
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a116c9
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@df1832
DEBUG - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@102799c
INFO - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@f72617
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c44b88
INFO - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@10385c1
DEBUG - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@186df0f
INFO - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@1be2d65
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@19e8f17
INFO - Type registration [clob] overrides previous : org.hibernate.type.ClobType@12dacd1
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@19e8f17
INFO - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@12dacd1
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@125fefa
INFO - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@b8df17
DEBUG - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@13ad33d
INFO - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@30c221
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@3c0007
INFO - Type registration [blob] overrides previous : org.hibernate.type.BlobType@1b90b39
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3c0007
INFO - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@1b90b39
DEBUG - Session factory constructed with filter configurations : {}
DEBUG - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=password, sun.boot.library.path=C:\java\jdk1.6.0_20\jre\bin, java.vm.version=16.3-b01, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Manoj\Workspace\Hibernate_WS\AHLab01, java.runtime.version=1.6.0_20-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\java\jdk1.6.0_20\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\manoj\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows NT (unknown), sun.jnu.encoding=Cp1252, java.library.path=C:\java\jdk1.6.0_20\jre\bin;.;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/java/jdk1.6.0_20/bin/../jre/bin/client;C:/java/jdk1.6.0_20/bin/../jre/bin;C:/java/jdk1.6.0_20/bin/../jre/lib/i386;C:\java\jdk1.6.0_20\bin;C:\java\jdk1.6.0_20\jre\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Common Files\lenovo\easyplussdk\bin;C:\Program Files (x86)\Skype\Phone\;C:\Users\manoj\AppData\Local\Microsoft\WindowsApps;;C:\Manoj\Software\Working Software\eclipse-jee-juno-SR1-win32\eclipse;, java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.2, user.home=C:\Users\manoj, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, java.class.path=C:\Manoj\Workspace\Hibernate_WS\AHLab01\bin;C:\Manoj\Software\Working Software\MySql5.0\mysql.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\antlr-2.7.6.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\commons-collections-3.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\dom4j-1.6.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\hibernate-commons-annotations-3.2.0.Final.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\hibernate-core-3.6.7.Final.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\javassist.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\jms-1.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\jsr250-api-1.0.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\jta-1.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\log4j-1.2.16.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\ojdbc14.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\slf4j-api-1.6.1.jar;C:\Manoj\Software\Working Software\hibernate-annotations-jar-files\slf4j-log4j12-1.6.1.jar, user.name=manoj, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.arch.data.model=32, java.home=C:\java\jdk1.6.0_20\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/hibernate_schema, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.6.0_20, java.ext.dirs=C:\java\jdk1.6.0_20\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\java\jdk1.6.0_20\jre\lib\resources.jar;C:\java\jdk1.6.0_20\jre\lib\rt.jar;C:\java\jdk1.6.0_20\jre\lib\sunrsasign.jar;C:\java\jdk1.6.0_20\jre\lib\jsse.jar;C:\java\jdk1.6.0_20\jre\lib\jce.jar;C:\java\jdk1.6.0_20\jre\lib\charsets.jar;C:\java\jdk1.6.0_20\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, dialect=org.hibernate.dialect.MySQLDialect}
DEBUG - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG - Static SQL for entity: com.prabhakar.hibernate.Customer
DEBUG -  Version select: select cid from customers where cid =?
DEBUG -  Snapshot select: select customer_.cid, customer_.city as city0_, customer_.cname as cname0_, customer_.email as email0_, customer_.phone as phone0_, customer_.status as status0_ from customers customer_ where customer_.cid=?
DEBUG -  Insert 0: insert into customers (city, cname, email, phone, status, cid) values (?, ?, ?, ?, ?, ?)
DEBUG -  Update 0: update customers set city=?, cname=?, email=?, phone=?, status=? where cid=?
DEBUG -  Delete 0: delete from customers where cid=?
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [NONE]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=?
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [READ]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=?
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [UPGRADE]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=? for update
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [UPGRADE_NOWAIT]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=? for update
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [FORCE]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=? for update
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [PESSIMISTIC_READ]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=? lock in share mode
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [PESSIMISTIC_WRITE]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=? for update
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [PESSIMISTIC_FORCE_INCREMENT]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=? for update
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [OPTIMISTIC]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=?
DEBUG - Static select for entity com.prabhakar.hibernate.Customer [OPTIMISTIC_FORCE_INCREMENT]: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=?
DEBUG - Static select for action ACTION_MERGE on entity com.prabhakar.hibernate.Customer: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=?
DEBUG - Static select for action ACTION_REFRESH on entity com.prabhakar.hibernate.Customer: select customer0_.cid as cid0_0_, customer0_.city as city0_0_, customer0_.cname as cname0_0_, customer0_.email as email0_0_, customer0_.phone as phone0_0_, customer0_.status as status0_0_ from customers customer0_ where customer0_.cid=?
DEBUG - initializing class SessionFactoryObjectFactory
DEBUG - registered: db8107e0-fd87-4314-ba7f-cd026d8c7c34 (unnamed)
INFO - Not binding factory to JNDI, no JNDI name configured
DEBUG - instantiated session factory
INFO - Running hbm2ddl schema update
INFO - fetching database metadata
INFO - updating schema
DEBUG - Processing hbm.xml files
DEBUG - Process annotated classes
DEBUG - processing fk mappings (*ToOne and JoinedSubclass)
DEBUG - processing extends queue
DEBUG - processing extends queue
DEBUG - processing collection mappings
DEBUG - processing native query and ResultSetMapping mappings
DEBUG - processing association property references
DEBUG - processing foreign key constraints
INFO - table found: hibernate_schema.customers
INFO - columns: [phone, status, email, cid, cname, city]
INFO - foreign keys: []
INFO - indexes: [primary]
DEBUG - Setting dialect [org.hibernate.dialect.MySQLDialect]
INFO - schema update complete
DEBUG - Checking 0 named HQL queries
DEBUG - Checking 0 named SQL queries
DEBUG - opened session at timestamp: 14759187459
DEBUG - begin
DEBUG - opening JDBC connection
DEBUG - current autocommit status: false
DEBUG - generated identifier: 33, using strategy: org.hibernate.id.Assigned
DEBUG - commit
DEBUG - processing flush-time cascades
DEBUG - dirty checking collections
DEBUG - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - listing entities:
DEBUG - com.prabhakar.hibernate.Customer{phone=12345, status=Enabled, email=kumar@gmail.com, cid=33, cname=Kuamr, city=Bumbai}
DEBUG - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG - insert into customers (city, cname, email, phone, status, cid) values (?, ?, ?, ?, ?, ?)
DEBUG - Executing batch size: 1
DEBUG - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG - Could not execute JDBC batch update [insert into customers (city, cname, email, phone, status, cid) values (?, ?, ?, ?, ?, ?)]
java.sql.BatchUpdateException: Duplicate entry '33' for key 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2018)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1454)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216)
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:383)
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:133)
	at com.prabhakar.hibernate.Client.main(Client.java:26)
WARN - SQL Error: 1062, SQLState: 23000
ERROR - Duplicate entry '33' for key 1
